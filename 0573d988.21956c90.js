(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{63:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),i=(n(0),n(90)),o={id:"amazon_connect",title:"Amazon Connect",sidebar_label:"Amazon Connect (telephony)",slug:"amazon_connect"},l={unversionedId:"sample_plugins/amazon_connect",id:"sample_plugins/amazon_connect",isDocsHomePage:!1,title:"Amazon Connect",description:"The Amazon Connect plugin is intended as a sample plugin, illustrating an approach to implement a telephony plugin. The plugin has minimal interaction required from the actual telephony flow. It consists of 3 parts, only one of which is actually specific to Amazon Connect:",source:"@site/docs/sample_plugins/comm_amazon_connect.md",slug:"/sample_plugins/amazon_connect",permalink:"/sample_plugins/amazon_connect",version:"current",sidebar_label:"Amazon Connect (telephony)",sidebar:"docs",previous:{title:"Communication plugin API",permalink:"/comm/api"},next:{title:"Setup for local testing",permalink:"/setup"}},c=[{value:"Plugin backend",id:"plugin-backend",children:[{value:"Configuration",id:"configuration",children:[]}]},{value:"Attribute display",id:"attribute-display",children:[{value:"Configuration",id:"configuration-1",children:[]}]},{value:"Amazon Connect integration",id:"amazon-connect-integration",children:[{value:"Configuration",id:"configuration-2",children:[]}]}],b={toc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The Amazon Connect plugin is intended as a sample plugin, illustrating an approach to implement a telephony plugin. The plugin has minimal interaction required from the actual telephony flow. It consists of 3 parts, only one of which is actually specific to Amazon Connect:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The plugin backend, which is responsible for talking to the rest of the ID Contact ecosystem."),Object(i.b)("li",{parentName:"ul"},"The attribute display, which is responsible for displaying attributes in an iframe embedded in the interface for the service employee."),Object(i.b)("li",{parentName:"ul"},"The modifications to the amazon connect flow, which are responsible for capturing the DTMF code and instructing the iframe to show the correct session data.")),Object(i.b)("p",null,"Within this design split, a call flow looks as follows:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"The core contacts the plugin backend to start a session."),Object(i.b)("li",{parentName:"ol"},"The plugin backend generates a DTMF code, and stores that together with the session purpose in its database."),Object(i.b)("li",{parentName:"ol"},"The plugin backend responds to the core with a phone URL containing the amazon connect phone number and the DTMF code, together with an attribute URL containing a session identifier."),Object(i.b)("li",{parentName:"ol"},"An authentication plugin contacts the plugin backend on the previously provided session identifier with an authentication result."),Object(i.b)("li",{parentName:"ol"},"The plugin backend stores this authentication result together with the session."),Object(i.b)("li",{parentName:"ol"},"The end user starts calling the amazon connect phone number."),Object(i.b)("li",{parentName:"ol"},"Amazon Connect answers and asks for the DTMF code."),Object(i.b)("li",{parentName:"ol"},"Amazon Connect then sends that DTMF code, together with the phone session identifier to the plugin backend."),Object(i.b)("li",{parentName:"ol"},"The plugin backend uses the DTMF code to find the session, and associates the phone session identifier with it."),Object(i.b)("li",{parentName:"ol"},"An agent gets assigned to the phone call by Amazon Connect"),Object(i.b)("li",{parentName:"ol"},"The agents user interface sends the phone session identifier to the attribute display iframe"),Object(i.b)("li",{parentName:"ol"},"The attribute display iframe ask the plugin backend for the authentication results and displays these in the iframe.")),Object(i.b)("p",null,"Note that the actual involvement from the phone flow that differs from a non-authenticated call is only in the reception of the DTML code and in a small modification to the agent user interface to update an iframe on agent state changes."),Object(i.b)("h2",{id:"plugin-backend"},"Plugin backend"),Object(i.b)("p",null,"The plugin backend is the main Rust binary in the repository. It is the server that talks directly to the rest of the ID Contact ecosystem."),Object(i.b)("h3",{id:"configuration"},"Configuration"),Object(i.b)("p",null,"The plugin backend is configured through the ",Object(i.b)("a",{parentName:"p",href:"https://rocket.rs/master/guide/configuration/"},"rocket configuration system"),", and is configured similarly to the ",Object(i.b)("a",{parentName:"p",href:"/configuration/comm_test"},"test communication plugin")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"key"),Object(i.b)("th",{parentName:"tr",align:null},"environment variable"),Object(i.b)("th",{parentName:"tr",align:null},"description"),Object(i.b)("th",{parentName:"tr",align:null},"default"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"address"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_ADDRESS"),Object(i.b)("td",{parentName:"tr",align:null},"IP address for server to use"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"127.0.0.1"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"port"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_PORT"),Object(i.b)("td",{parentName:"tr",align:null},"Port for server to listen on"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"8000"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"internal_url"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_INTERNAL_URL"),Object(i.b)("td",{parentName:"tr",align:null},"URL on which the server can be reached by other ID Contact components"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"workers"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_WORKERS"),Object(i.b)("td",{parentName:"tr",align:null},"Number of threads to use for serving responses"),Object(i.b)("td",{parentName:"tr",align:null},"cpu core count")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"keep_alive"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_KEEP_ALIVE"),Object(i.b)("td",{parentName:"tr",align:null},"HTTP persistence keep alive timeout"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"5"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"log_level"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_LOG_LEVEL"),Object(i.b)("td",{parentName:"tr",align:null},"Log level (",Object(i.b)("inlineCode",{parentName:"td"},"off"),"/",Object(i.b)("inlineCode",{parentName:"td"},"critical"),"/",Object(i.b)("inlineCode",{parentName:"td"},"normal"),"/",Object(i.b)("inlineCode",{parentName:"td"},"debug"),")"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"normal"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"phonenumber"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_PHONENUMBER"),Object(i.b)("td",{parentName:"tr",align:null},"Phone number of amazon connect flow"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"dtmf_length"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_DTMF_LENGTH"),Object(i.b)("td",{parentName:"tr",align:null},"Number of digits in generated DTMF codes"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"result_length"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_RESULT_LENGTH"),Object(i.b)("td",{parentName:"tr",align:null},"Number of characters in authentication result report code"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"decryption_privkey"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_DECRYPTION_PRIVKEY"),Object(i.b)("td",{parentName:"tr",align:null},"Private key used for decrypting authentication results"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"signature_pubkey"),Object(i.b)("td",{parentName:"tr",align:null},"ROCKET_SIGNATURE_PUBKEY"),Object(i.b)("td",{parentName:"tr",align:null},"Public key used for verifying the signature on authentication results"),Object(i.b)("td",{parentName:"tr",align:null})))),Object(i.b)("p",null,"The cryptographic key parameters consists of the following subkeys specifying the actual key type and key material"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"key"),Object(i.b)("th",{parentName:"tr",align:null},"description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"type"),Object(i.b)("td",{parentName:"tr",align:null},"What type of key this is (",Object(i.b)("inlineCode",{parentName:"td"},"RSA")," for RSA keys, ",Object(i.b)("inlineCode",{parentName:"td"},"EC")," for eliptic curve keys)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"key"),Object(i.b)("td",{parentName:"tr",align:null},"PEM encoding of the actual key")))),Object(i.b)("h2",{id:"attribute-display"},"Attribute display"),Object(i.b)("p",null,"The attribute display is a simple react application contained fully in the ",Object(i.b)("inlineCode",{parentName:"p"},"attribute-ui")," folder. It takes the session identifier as a query parameter and uses that to fetch authentication results from the backend and display these."),Object(i.b)("h3",{id:"configuration-1"},"Configuration"),Object(i.b)("p",null,"The attribute display code is configured through the file ",Object(i.b)("inlineCode",{parentName:"p"},"attribute-ui/config.js"),". This contains translations for the purpose tags in ",Object(i.b)("inlineCode",{parentName:"p"},"window.TRANSLATIONS"),", as well as the url on which the plugin backend can be found in ",Object(i.b)("inlineCode",{parentName:"p"},"window.SERVER_URL"),"."),Object(i.b)("h2",{id:"amazon-connect-integration"},"Amazon Connect integration"),Object(i.b)("p",null,"The actual Amazon Connect integration consists of two subparts: a lambda which is called during the amazon connect flow to link the phone session identifier to the dtmf code (in ",Object(i.b)("inlineCode",{parentName:"p"},"aws_funcs/assign_id.js"),"), and an amazon connect service center UI (in ",Object(i.b)("inlineCode",{parentName:"p"},"amazon-connect-ui"),")."),Object(i.b)("p",null,"The service center user interface is a very thin wrapper page around the amazon-connect-streams API, adding only an extra iframe to the page and some code for updating that iframe's src attribute depending on the current session the agent is in."),Object(i.b)("h3",{id:"configuration-2"},"Configuration"),Object(i.b)("p",null,"The lambda and Amazon Connect flow must be configured through Amazon's interfaces for this. The service center user interface has a configuration file ",Object(i.b)("inlineCode",{parentName:"p"},"amazon-connect-ui/config.js")," which should contain the URL of the attribute user interface in ",Object(i.b)("inlineCode",{parentName:"p"},"AttributeURL"),", and the Amazon Connect Streams URL as ",Object(i.b)("inlineCode",{parentName:"p"},"AmazonConnectURL"),"."))}p.isMDXComponent=!0},90:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(n),d=a,m=s["".concat(o,".").concat(d)]||s[d]||u[d]||i;return n?r.a.createElement(m,l(l({ref:t},b),{},{components:n})):r.a.createElement(m,l({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var b=2;b<i;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);