
@startuml
title ID-contact communication-initiated authentication v0.3.0

actor Citizen as citizen
participant "Core widget" as widget
participant "ID Contact Core" as core
participant "Auth plugin" as auth_plugin
participant "Auth widget" as auth_widget
participant "Comm plugin" as comm_plugin
participant "Comm widget" as comm_widget
actor Agent as agent

== Initialize session ==

activate citizen
citizen->widget: navigate
activate widget
widget-->citizen: page
citizen->widget: click
widget->core: sessionOptions(purpose)
activate core
core->core: getAuthMethods(purpose)
core->core: getCommMethods(purpose)
core-->widget: ok(commMethods, authMethods),
deactivate core
widget-->citizen: commMethods

== Choose communication method ==

citizen->widget: selectCommMethod
citizen->widget: start
widget->core: start(commMethod, purpose)
activate core
core->comm_plugin: start(purpose, noAuth=true)
activate comm_plugin
comm_plugin-->core: ok(commUrl)
core-->widget: redirect(commUrl)
deactivate core
widget-->citizen: redirect(commUrl)
deactivate widget

== Start conversation ==

citizen->comm_widget: load(commUrl)
activate comm_widget
comm_widget-->citizen: page

citizen->comm_widget: startConversation
comm_widget->comm_plugin: startConversation

comm_plugin->comm_plugin: assignAgent(purpose)
comm_plugin->comm_plugin: createConversation(agentId)

== Conversation ongoing ==
comm_plugin->agent: newConversation

activate agent
citizen<->agent: conversation

== Authentication during conversation ==
agent->comm_plugin: requestAuth
comm_plugin->comm_widget: startAuth(purpose, attrUrl, commUrl)
comm_widget->widget: startAuth(purpose, attrUrl, commUrl)
activate widget
widget->core: sessionOptions(purpose)
activate core
core->core: getAuthMethods(purpose)
core->core: getCommMethods(purpose)
core-->widget: ok(commMethods, authMethods),
deactivate core
widget->citizen: authMethods
citizen->widget: selectAuthMethod
widget->core: start(purpose, attrUrl, commUrl, authMethod)
activate core
core->core: getAttrRequest(purpose)
core->auth_plugin: start(clientRedirect=commUrl, attrUrl, attrRequest)
activate auth_plugin
auth_plugin-->core: ok(authUrl)
core-->widget: redirect(authUrl)
deactivate core
widget-->citizen: redirect(authUrl)
deactivate widget

citizen->auth_widget: load(authUrl)
activate auth_widget
auth_widget-->citizen: page
deactivate auth_widget

citizen->auth_plugin: authenticate
auth_plugin-->citizen: redirect(clientRedirect)
auth_plugin->comm_plugin: attrUrl(attrsEncrypted)
comm_plugin-->auth_plugin: ok
deactivate auth_plugin

citizen-->comm_widget: load(clientRedirect)
comm_plugin->comm_plugin: decrypt(attrsEncrypted)
comm_plugin->agent: attributes(attrs)

citizen<->agent: conversation <ongoing>

== End conversation ==
agent->comm_plugin: closeConversation
comm_plugin->comm_widget: conversationClosed
comm_widget->citizen: conversationClosed
deactivate comm_widget
deactivate citizen
agent->comm_plugin: deleteAttributes
comm_plugin->agent: ok
deactivate comm_plugin
deactivate agent


@enduml
