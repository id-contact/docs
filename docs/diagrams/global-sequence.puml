
@startuml
title ID-contact Core Global sequence v0.3.0

actor Citizen as citizen
participant "Core widget" as widget
participant "ID Contact Core" as core
participant "Auth widget" as auth_widget
participant "Auth plugin" as auth_plugin
participant "Comm widget" as comm_widget
participant "Comm plugin" as comm_plugin
actor Agent as agent

== Initialize session ==

activate citizen
citizen->widget: navigate
activate widget
widget-->citizen: page
citizen->widget: click
widget->core: newSession(purpose)
activate core
core->core: getAuthMethod(purpose)
core->core: getCommMethod(purpose)
core->core: generateSessionToken
core-->widget: ok(sessionToken, commEndpoints, authEndpoints, attrRequests),
deactivate core
widget-->citizen: commEndpoints
deactivate widget
citizen->widget: selectCommEndpoint
activate widget
widget->comm_plugin: getCommRedirectURI(purpose)
activate comm_plugin
comm_plugin-->widget: commRedirectURI
deactivate comm_plugin
widget->comm_plugin: getAttrEncryptionKey()
activate comm_plugin
comm_plugin-->widget: attrEncryptionKey
deactivate comm_plugin
widget-->citizen: authEndpoints
deactivate widget

== Authentication ==

citizen->widget: selectAuthMethod
activate widget
widget->auth_plugin: getAuthRedirectURI()
activate auth_plugin
auth_plugin-->widget: authRedirectURI
deactivate auth_plugin
widget-->citizen: redirect(authRedirectURI, sessionToken, attrRequests, attrEncryptionKey, commRedirectURI)
deactivate widget

citizen->auth_widget: load(authRedirectURI, sessionToken)
activate auth_widget
auth_widget-->citizen: page
deactivate auth_widget

citizen->auth_widget: authenticate(credentials, attrRequests, attrEncryptionKey)
activate auth_widget
auth_widget->auth_plugin: authenticate(credentials, sessionToken)
activate auth_plugin
auth_plugin->auth_plugin: getAttrs(credentials)
auth_plugin->auth_plugin: encrypt(attrs, sessionToken, attrEncryptionKey)
auth_plugin-->auth_widget: ok(attrsEncrypted)
deactivate auth_plugin
auth_widget->citizen: redirect(commRedirectURI, sessionToken, attrsEncrypted)
deactivate auth_widget

== Start conversation ==

citizen->comm_widget: load(commRedirectURI, sessionToken)
activate comm_widget
comm_widget-->citizen: page
deactivate comm_widget

citizen->comm_widget: startConversation(sessionToken, attrsEncrypted)
activate comm_widget
comm_widget->comm_plugin: startConversation(sessionToken, attrsEncrypted)
activate comm_plugin

comm_plugin->comm_plugin: assignAgent(purpose, sessionToken)
comm_plugin->comm_plugin: createConversation(agentId, sessionToken)

== Conversation ongoing ==
comm_plugin->comm_plugin: decrypt(attrsEncrypted, attrDecryptionKey)
comm_plugin->agent: newConversation(attrs)
deactivate comm_plugin

activate agent
citizen<->agent: conversation

== End conversation ==
agent->comm_plugin: closeConversation
activate comm_plugin
comm_plugin->comm_widget: conversationClosed
deactivate comm_plugin
comm_widget->citizen: conversationClosed
deactivate comm_widget
deactivate citizen
agent->comm_plugin: removeSession
activate comm_plugin
comm_plugin-->agent: ok
deactivate comm_plugin
deactivate agent


@enduml