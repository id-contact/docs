
@startuml
title ID-contact Core Global sequence v0.3.0

actor Citizen as citizen
participant "Core widget" as widget
participant "ID Contact Core" as core
participant "Auth plugin" as auth_plugin
participant "Auth widget" as auth_widget
participant "Comm plugin" as comm_plugin
participant "Comm widget" as comm_widget
actor Agent as agent

== Initialize session ==

activate citizen
citizen->widget: navigate
activate widget
widget-->citizen: page
citizen->widget: click
widget->core: newSession(purpose)
activate core
core->core: getAuthMethod(purpose)
core->core: getCommMethod(purpose)
core->core: generateSessionToken
core-->widget: ok(sessionToken, commEndpoints, authEndpoints, attrRequests),
deactivate core
widget-->citizen: commEndpoints, authEndpoints
deactivate widget
citizen->widget: selectCommEndpoint
activate widget
citizen->widget: selectAuthMethod
citizen->widget: start
widget->core: start(commEndpoint, authEndpoint)
activate core
core->comm_plugin: start(purpose)
activate comm_plugin
comm_plugin-->core: ok(commUrl, attrUrl)
core->auth_plugin: start(client_redirect=commUrl, result=attrUrl, attrRequest)
activate auth_plugin
auth_plugin-->core: ok(authUrl)
core->widget: redirect(authUrl)
deactivate core
widget-->citizen: redirect(authUrl)
deactivate widget

== Authentication ==

citizen->auth_widget: load(authUrl)
activate auth_widget
auth_widget-->citizen: page
deactivate auth_widget

citizen->auth_plugin: authenticate()
auth_plugin-->citizen: redirect(clientRedirect)
auth_plugin->comm_plugin: attrUrl(attrsEncrypted)
comm_plugin-->auth_plugin: ok()
deactivate auth_plugin

== Start conversation ==

citizen->comm_widget: load(clientRedirect)
activate comm_widget
comm_widget-->citizen: page
deactivate comm_widget

citizen->comm_widget: startConversation()
activate comm_widget
comm_widget->comm_plugin: startConversation(sessionToken, purpose)

comm_plugin->comm_plugin: assignAgent(purpose, sessionToken)
comm_plugin->comm_plugin: createConversation(agentId, sessionToken)

== Conversation ongoing ==
comm_plugin->comm_plugin: decrypt(attrsEncrypted, attrDecryptionKey)
comm_plugin->agent: newConversation(attrs)

activate agent
citizen<->agent: conversation

== End conversation ==
agent->comm_plugin: closeConversation
comm_plugin->widget: conversationClosed
deactivate widget
widget->citizen: conversationClosed
deactivate comm_widget
deactivate citizen
agent->comm_plugin: deleteAttributes
comm_plugin->agent: ok
deactivate comm_plugin
deactivate agent


@enduml
